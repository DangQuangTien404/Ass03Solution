@page "/chat"
@rendermode InteractiveServer
@implements IAsyncDisposable
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager

<h1>Chat</h1>

<input @bind="message" placeholder="Message" />
<button class="btn btn-primary" @onclick="SendMessage" disabled="@(hubConnection == null)">Send</button>

<ul>
    @foreach (var msg in messages)
    {
        <li>@msg</li>
    }
</ul>

@code {
    private HubConnection? hubConnection;
    private string? message;
    private List<string> messages = new();

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/chathub"))
            .WithAutomaticReconnect()
            .Build();

        hubConnection.On<string, string>("ReceiveMessage", (user, msg) =>
        {
            messages.Add($"{user}: {msg}");
            StateHasChanged();
        });

        await hubConnection.StartAsync();
    }

    private async Task SendMessage()
    {
        if (hubConnection is not null && !string.IsNullOrWhiteSpace(message))
        {
            await hubConnection.SendAsync("SendMessage", "User", message);
            message = string.Empty;
        }
    }

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}
