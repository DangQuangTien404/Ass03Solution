@page "/profile"
@rendermode InteractiveServer
@inject DataAccess.Services.IMemberService MemberService
@inject eStore.AdminAuthService AuthService
@inject Microsoft.AspNetCore.Components.NavigationManager Navigation

<PageTitle>Profile</PageTitle>

@if (!AuthService.IsLoggedIn)
{
    <p>Redirecting...</p>
}
else if (model == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="model" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <div class="mb-3">
            <label class="form-label">Email</label>
            <InputText class="form-control" @bind-Value="model.Email" />
        </div>
        <div class="mb-3">
            <label class="form-label">Company</label>
            <InputText class="form-control" @bind-Value="model.CompanyName" />
        </div>
        <div class="mb-3">
            <label class="form-label">City</label>
            <InputText class="form-control" @bind-Value="model.City" />
        </div>
        <div class="mb-3">
            <label class="form-label">Country</label>
            <InputText class="form-control" @bind-Value="model.Country" />
        </div>
        <div class="mb-3">
            <label class="form-label">Password</label>
            <InputText class="form-control" @bind-Value="model.Password" type="password" />
        </div>
        <button type="submit" class="btn btn-primary">Save</button>
    </EditForm>
}

@code {
    private BusinessObject.DTOs.MemberDto? model;

    protected override void OnInitialized()
    {
        if (!AuthService.IsLoggedIn)
        {
            Navigation.NavigateTo("/login");
            return;
        }

        if (AuthService.MemberId is int id)
        {
            model = MemberService.GetMember(id);
        }
    }

    private void HandleValidSubmit()
    {
        if (model != null)
        {
            MemberService.UpdateMember(model);
        }
    }
}
